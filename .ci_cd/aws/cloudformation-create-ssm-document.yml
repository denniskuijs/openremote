# ---------------------------------------------------------------------------------------------------------------------
#
# CloudFormation Template for creating an SSM Document for detaching the EBS Data volume.
#
# ---------------------------------------------------------------------------------------------------------------------

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates an SSM Document for attaching/detaching the EBS volume'

Parameters:
  Host:
    Description: FQDN for host.
    Type: String
  InstanceId:
    Description: InstanceId where the script needs to be executed.
    Type: String
  VolumeId:
    Description: VolumeId that needs to be attached/detached.
    Type: String
  EBSDeviceName:
    Description: EBS DeviceName where this volume is mounted on.
    Type: String

Resources:
  SSMDetachEBSDocument:
    Type: AWS::SSM::Document
    Properties:
         Content:
            schemaVersion: '2.2'
            description: 'Script for detaching the EBS volume'
            parameters:
              InstanceId:
                type: String
                description: InstanceId where the script needs to be executed.
                default: !Ref InstanceId
              VolumeId:
                type: String
                description: VolumeId that needs to be detached.
                default: !Ref VolumeId
              EBSDeviceName:
                  type: String
                  description: EBS DeviceName where this volume is mounted on.
                  default: !Ref EBSDeviceName
            mainSteps:
              - name: StopDocker
                action: aws:runShellScript
                inputs:
                    runCommand:
                      - systemctl stop docker
              - name: RemoveFstabEntry
                action: aws:runShellScript
                inputs:
                  runCommand: 
                    - |
                      UUID=$(sudo blkid -o value -s UUID {{ EBSDeviceName }})
                      if [ -n "$UUID" ]; then
                        cp /etc/fstab /etc/fstab.orig
                        sed -i '/UUID='$UUID'/d' /etc/fstab
                      else
                        echo "Failed to remove /etc/fstab entry. UUID is not found"
                        exit 1
                      fi
              - name: UmountVolume
                action: aws:runShellScript
                inputs:
                  runCommand:
                    - umount {{ EBSDeviceName }}
              - name: DetachVolume
                action: aws:runShellScript
                inputs:
                  runCommand: 
                    - |
                      VOLUME=$(aws ec2 detach-volume --volume-id {{ VolumeId }})
                      STATUS=$(aws ec2 describe-volumes --query "Volumes[?VolumeId=='{{ VolumeId }}'].State" --output text 2>/dev/null)
                      
                      while [[ "$STATUS" == 'in-use' ]] do
                        echo "Volume is still in-use .. Sleeping 30 seconds"
                        sleep 30
                        STATUS=$(aws ec2 describe-volumes --query "Volumes[?VolumeId=='{{ VolumeId }}'].State" --output text 2>/dev/null)
                      done

                      if [ "$STATUS" != "available" ]; then
                        echo "Failed to detach volume"
                        exit 1
                      fi
         DocumentFormat: YAML
         TargetType: /AWS::EC2::Instance
         UpdateMethod: Replace
         DocumentType: Command
         Name: !Sub ${Host}_detach
  
  SSMAttachEBSDocument:
    Type: AWS::SSM::Document
    Properties:
         Content:
            schemaVersion: '2.2'
            description: 'Script for attaching the EBS volume'
            parameters:
              InstanceId:
                type: String
                description: InstanceId where the script needs to be executed.
                default: !Ref InstanceId
              VolumeId:
                type: String
                description: VolumeId that needs to be attached.
                default: !Ref VolumeId
              EBSDeviceName:
                  type: String
                  description: EBS DeviceName where this volume needs to be mounted on.
                  default: !Ref EBSDeviceName
            mainSteps:
              - name: StopDocker
                action: aws:runShellScript
                inputs:
                  runCommand:
                    - systemctl stop docker
              - name: MountVolume
                action: aws:runShellScript
                inputs:
                  runCommand:
                    - mount {{ EBSDeviceName }} /var/lib/docker/volumes
              - name: AddFstabEntry
                action: aws:runShellScript
                inputs:
                  runCommand:
                    -  |
                       UUID=$(sudo blkid -o value -s UUID {{ EBSDeviceName }})
                       if [ -n "$UUID" ]; then
                          cp /etc/fstab /etc/fstab.orig
                          echo "UUID=$UUID /var/lib/docker/volumes xfs defaults,nofail 0 2" >> /etc/fstab
                       else
                          echo "Failed to add /etc/fstab entry. UUID is not found"
                          exit 1
                       fi
              - name: StartDocker
                action: aws:runShellScript
                inputs:
                    runCommand:
                      - systemctl start docker
         DocumentFormat: YAML
         TargetType: /AWS::EC2::Instance
         UpdateMethod: Replace
         DocumentType: Command
         Name: !Sub ${Host}_attach